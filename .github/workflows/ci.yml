name: Rust

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  ci:
    runs-on: ubuntu-latest
    permissions:
      contents: none
    needs:
      - check
      - test
      - msrv
    steps:
      - run: exit 0

  check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
    - uses: Swatinem/rust-cache@v2
    - run: |
        cargo check --workspace

  msrv:
    runs-on: ubuntu-latest
    needs: check
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@master
      with:
        toolchain: 1.81.0
    - uses: Swatinem/rust-cache@v2
    - run: |
        cargo check --workspace

  test:
    name: test (${{ matrix.target.os }} - ${{ matrix.target.toolchain }})
    needs: check
    strategy:
      matrix:
        target:
          - { os: ubuntu-latest, toolchain: stable, triple: x86_64-unknown-linux-gnu }
          - { os: ubuntu-latest, toolchain: beta, triple: x86_64-unknown-linux-gnu }
          - { os: ubuntu-latest, toolchain: nightly, triple: x86_64-unknown-linux-gnu }
          - { os: macos-latest, toolchain: stable, triple: x86_64-apple-darwin }
          - { os: windows-latest, toolchain: stable, triple: x86_64-pc-windows-gnu }
          - { os: windows-latest, toolchain: stable, triple: i686-pc-windows-msvc }
    runs-on: ${{ matrix.target.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.target.toolchain }}
          targets: ${{ matrix.target.triple }}
      - uses: Swatinem/rust-cache@v2
      - uses: taiki-e/install-action@v2
        with:
          tool: nextest
      - run: |
          cargo nextest run --workspace
          cargo test --doc
